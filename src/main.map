Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega328p.o (exit)
/usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/libatmega328p.a(eerd_byte.o)
                              main.o (eeprom_read_byte)

Allocating common symbols
Common symbol       size              file

pack                0x23              main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega328p.o
LOAD main.o
START GROUP
LOAD /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/libatmega328p.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x31a
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega328p.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 .init4         0x000000000000008a       0x10 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
                0x000000000000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000009a        0x8 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega328p.o
 *(.init9)
 *(.text)
 .text          0x00000000000000a2        0x4 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega328p.o
                0x00000000000000a2                __vector_22
                0x00000000000000a2                __vector_1
                0x00000000000000a2                __vector_24
                0x00000000000000a2                __vector_12
                0x00000000000000a2                __bad_interrupt
                0x00000000000000a2                __vector_6
                0x00000000000000a2                __vector_3
                0x00000000000000a2                __vector_23
                0x00000000000000a2                __vector_25
                0x00000000000000a2                __vector_11
                0x00000000000000a2                __vector_13
                0x00000000000000a2                __vector_17
                0x00000000000000a2                __vector_19
                0x00000000000000a2                __vector_7
                0x00000000000000a2                __vector_5
                0x00000000000000a2                __vector_4
                0x00000000000000a2                __vector_9
                0x00000000000000a2                __vector_2
                0x00000000000000a2                __vector_21
                0x00000000000000a2                __vector_15
                0x00000000000000a2                __vector_8
                0x00000000000000a2                __vector_14
                0x00000000000000a2                __vector_10
                0x00000000000000a2                __vector_16
                0x00000000000000a2                __vector_20
 .text          0x00000000000000a6      0x1fa main.o
                0x00000000000000a6                Packet_init
                0x00000000000000f8                __vector_18
                0x0000000000000200                Packet_waiting
                0x0000000000000206                Packet_get
                0x000000000000024a                Packet_put
 .text          0x00000000000002a0        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
 .text          0x00000000000002a0        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
 .text          0x00000000000002a0        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
 .text          0x00000000000002a0        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/libatmega328p.a(eerd_byte.o)
                0x00000000000002a0                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000000000002a0       0x66 main.o
                0x00000000000002a0                main
 .text.libgcc.mul
                0x0000000000000306        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000306        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000306        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000306        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000306        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000306        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000306        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000306        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000306        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000306        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000306        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000306        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000306        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000306        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000306        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000306        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000306        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000306        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000306        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000306        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000306        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x0000000000000306       0x10 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/libatmega328p.a(eerd_byte.o)
                0x0000000000000306                eeprom_read_byte
                0x0000000000000316                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000316        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
                0x0000000000000316                exit
                0x0000000000000316                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000316        0x4 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000031a                _etext = .

.data           0x0000000000800100        0x4 load address 0x000000000000031a
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega328p.o
 .data          0x0000000000800100        0x4 main.o
                0x0000000000800100                instr
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/libatmega328p.a(eerd_byte.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800104                . = ALIGN (0x2)
                0x0000000000800104                _edata = .
                0x0000000000800104                PROVIDE (__data_end, .)

.bss            0x0000000000800104      0x13e
                0x0000000000800104                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega328p.o
 .bss           0x0000000000800104      0x11b main.o
                0x0000000000800104                ID
 .bss           0x000000000080021f        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_exit.o)
 .bss           0x000000000080021f        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_copy_data.o)
 .bss           0x000000000080021f        0x0 /usr/lib/gcc/avr/5.2.0/avr5/libgcc.a(_clear_bss.o)
 .bss           0x000000000080021f        0x0 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/libatmega328p.a(eerd_byte.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080021f       0x23 main.o
                0x000000000080021f                pack
                0x0000000000800242                PROVIDE (__bss_end, .)
                0x000000000000031a                __data_load_start = LOADADDR (.data)
                0x000000000000031e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800242        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x0000000000800242                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0xa38
 *(.stab)
 .stab          0x0000000000000000      0xa38 main.o

.stabstr        0x0000000000000000      0xed4
 *(.stabstr)
 .stabstr       0x0000000000000000      0xed4 main.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega328p.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x5f4
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x5f4 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega328p.o

.debug_abbrev   0x0000000000000000      0x5a2
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x5a2 /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega328p.o

.debug_line     0x0000000000000000       0x1d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega328p.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x20b
 *(.debug_str)
 .debug_str     0x0000000000000000      0x20b /usr/lib/gcc/avr/5.2.0/../../../../avr/lib/avr5/crtatmega328p.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs
